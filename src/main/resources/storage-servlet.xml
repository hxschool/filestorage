<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:property-placeholder location="classpath:application.properties" />

    <!-- http://static.springsource.org/spring/docs/3.2.x/spring-framework-reference/htmlsingle/#mvc-config -->
    <mvc:annotation-driven />

    <!-- To enable autodetection of such annotated controllers, you add component scanning to your configuration. The controllers 
    are autodetected POJOs labeled with the @Controller annotation. context:component-scan> only looks for annotations on beans 
    in the same application context in which it is defined. This means that, if you put <context:annotation-config/> in a WebApplicationContext 
    for a DispatcherServlet, it only checks for @Autowired beans in your controllers, and not your services. -->
    <context:component-scan base-package="com.hadventure.zonlolo.storage.web" />

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter" />
            </list>
        </property>

    </bean>
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json" />
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        <property name="favorPathExtension" value="true" />
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="jsonp" value="application/javascript" />
            </map>
        </property>
        <property name="defaultContentType" value="application/json"></property>
     
    </bean>

    <!-- ViewResolver for jsp pages -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <!-- see javadoc of InternalResourceView for detail -->
        <property name="suffix" value=".jsp" />
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <description>file uploader</description>
        <property name="maxUploadSize" value="${upload.maxUploadSize}"/>
    </bean>
</beans>
